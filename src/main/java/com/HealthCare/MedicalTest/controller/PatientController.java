package com.HealthCare.MedicalTest.controller;

import com.HealthCare.MedicalTest.DTO.PatientDTO;
import com.HealthCare.MedicalTest.DTO.UpdatePatientDTO;
import com.HealthCare.MedicalTest.domain.Patient;
import com.HealthCare.MedicalTest.service.MedicalTestService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@RestController // This means that this class is a Controller
@RequestMapping(path="/MedicalTest/Patient") // This means URL's start with /demo (after Application path)
public class PatientController {

    //add Patient
    //Update Patient
    //Delete Patient
    //Get All Patient
    //Request a medical test session
    //

    private final MedicalTestService medicalTestService;

    @Autowired// This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    public PatientController(MedicalTestService medicalTestService){
        this.medicalTestService = medicalTestService;
    }

    @PostMapping(path="/add") // Map ONLY POST Requests
    public String addNewUser(@RequestBody PatientDTO patientDTO) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        return medicalTestService.addNewUser(patientDTO);
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Patient> fetchAllUsers() {
        // This returns a JSON or XML with the users
        return medicalTestService.getAllUsers();
    }

    @PutMapping(path="/update")
    public @ResponseBody PatientDTO updateUser(@RequestBody UpdatePatientDTO updatePatientDTO) {
           return medicalTestService.updateUser(updatePatientDTO);
    }

    @DeleteMapping(path="/delete/{userName}")
    public @ResponseBody String deleteUser(@PathVariable("userName") String UserName) {
           return medicalTestService.deleteUser(UserName);
    }

}